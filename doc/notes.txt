# What I did

 * add it all to git source control, except for some binary deps (use NuGet for those)
 * import to Visual Studio 2015 and convert to .NET FW 4
 * replace some deps with NuGet versions (for example SQLite had to be upgraded from .NET FW 2)
 * change some build dir for ProxyReEncrypt.dll, although for no good reason
 * added NUnit tests to SecuruStik project to run isolated basic functionality
 * manually copied PRE.dll to SecuruStik output folder
 * added SQLite using NuGet to SecuruStik project so that SQLite.Interop.dll is there too
 * added log4net instead of home-built logging


# What needs to be fixed

 * C++ code probably rewrite
 * exceptions
	* `catch (Exception e) { throw e }` must be deleted
	* empty handlers in 1st phase should add logging and in 2nd phase would be removed and exceptions handled correctly
	* sometimes they catch everything and return false. And then never check the return value anyway.
 * fix duplicate code
 * less code == better
 * make it work on Mono
 * loopbacktool doesnt accept file paths with spaces (even when using ")
 * build and paths seem to be pretty messy
 * I bet it doesn't handle unicode paths properly

## Configuration is a mess

 * Where are static parameters stored (such as server URL)?
 * Where are users settings stored (such as Dropbox token)?
 
 TODO
	- Properties.Settings goes to AppData\Local or something
	  UserConfig.Setting uses 

## Porting to OSX
 + replaced System.Data.SQLite with Mono.Data.Sqlite
 - will replace Win32 Window Messages with 0MQ (probably)
 - need to compile C code on OSX too
 - shell extensions of course must be completely replaced on OSX
 - Dropbox integration on OSX
 - Mono doesn't have browser in Windows Forms - dropbox auth must open an external browser
    (or can integrate something with ObjC)

